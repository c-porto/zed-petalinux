# SPDX-License-Identifier: GPL-2.0-only

set proj_name project_1
set proj_dir ./hw_project
set output_dir outputs
set script_dir [file dirname [info script]]
set version_file [file join $script_dir .. VERSION]
set xdc_list {xdc/zed-template.xdc xdc/bitstream_compression_enable.xdc}
set board_store_dir "$env(HOME)/.Xilinx/Vivado/2023.1/xhub/board_store/xilinx_board_store"

set fh [open $version_file]
set version [string trim [read $fh]]
close $fh

source $script_dir/bd.tcl

# parse arguments
for { set i 0 } { $i < $argc } { incr i } {
  # proj name
  if { [lindex $argv $i] == "-proj_name" } {
    incr i
    set proj_name [lindex $argv $i]
  }
  # jobs
  if { [lindex $argv $i] == "-jobs" } {
    incr i
    set jobs [lindex $argv $i]
  }
  if { [lindex $argv $i] == "-platform_name" } {
    incr i
    set platform_name [lindex $argv $i]
  }
 }
	        
create_project $proj_name $proj_dir/$proj_name -force -part xc7z020clg484-1

# Project configuration
set obj [current_project]
set_property -name "board_part_repo_paths" -value "[file normalize "$board_store_dir"]" -objects $obj
set_property -name "board_part" -value "avnet.com:zedboard:part0:1.4" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/$proj_name.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "ZedBoard" -objects $obj
set_property -name "platform.default_output_type" -value "sd_card" -objects $obj
set_property -name "platform.description" -value "Zedboard Template Design" -objects $obj
set_property -name "platform.design_intent.datacenter" -value "false" -objects $obj
set_property -name "platform.design_intent.embedded" -value "true" -objects $obj
set_property -name "platform.design_intent.external_host" -value "false" -objects $obj
set_property -name "platform.design_intent.server_managed" -value "false" -objects $obj
set_property -name "platform.extensible" -value "1" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/$proj_name.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "target_language" -value "Verilog" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj

# Include XDC Constraints
import_files -fileset constrs_1 $xdc_list

::fsat_bd::create_base_design $proj_name $version

make_wrapper -files [get_files ${proj_dir}/${proj_name}/${proj_name}.srcs/sources_1/bd/$proj_name/${proj_name}.bd] -top
import_files -force -norecurse ${proj_dir}/${proj_name}/${proj_name}.srcs/sources_1/bd/$proj_name/hdl/${proj_name}_wrapper.v
update_compile_order
set_property top ${proj_name}_wrapper [current_fileset]
update_compile_order -fileset sources_1

save_bd_design
validate_bd_design
close_bd_design $proj_name 

file mkdir $proj_dir/$output_dir

set outputs_dir $proj_dir/$output_dir

set fd [open $outputs_dir/README.hw w] 

puts $fd "#####################################################################################################################################"
puts $fd "This project was autogenerated by using the Flatsat2 scripts at @ [clock format [clock seconds] -format {%a %b %d %H:%M:%S %Z %Y}]"
puts $fd "#####################################################################################################################################"

puts $fd "VERSION: $version" 

set board_part [get_board_parts [current_board_part -quiet] -quiet]
if { $board_part != ""} {
	puts $fd "BOARD: $board_part" 
}

puts $fd "BLOCK DESIGN: $proj_name"

puts $fd "Git Commit: [exec git rev-parse HEAD]"

set columns {%40s%30s%15s%50s}
puts $fd [string repeat - 150]
puts $fd [format $columns "MODULE INSTANCE NAME" "IP TYPE" "IP VERSION" "IP"]
puts $fd [string repeat - 150]

foreach ip [get_ips] {
	set catlg_ip [get_ipdefs -all [get_property IPDEF $ip]]	
	puts $fd [format $columns [get_property NAME $ip] [get_property NAME $catlg_ip] [get_property VERSION $catlg_ip] [get_property VLNV $catlg_ip]]
}

close $fd

launch_runs synth_1 -jobs $jobs
wait_on_run synth_1
    
launch_runs impl_1 -to_step write_bitstream
            
wait_on_run impl_1

open_run impl_1        

write_bitstream -force $outputs_dir/$proj_name.bit
write_hw_platform -fixed -force -include_bit -file $outputs_dir/${proj_name}.xsa
validate_hw_platform -verbose $outputs_dir/${proj_name}.xsa
            
exit
